{"version":3,"file":"static/js/863.7b11e466.chunk.js","mappings":"mJAGA,IAHgB,WACd,OAAO,wCACR,C,sJCCKA,EAAc,mCAAG,WAAMC,GAAN,iFACRC,MAAM,GAAD,OAJH,4CAIG,oBAHR,mCAGQ,kBAAqCD,IAASE,MAC9D,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,wBACjC,IAPkB,mFAAH,sDAWpB,I,SCyEA,EAjFe,WAAO,IAAD,EACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMlB,EAAK,UAAGiB,EAAaE,IAAI,gBAApB,QAAgC,GAC3C,GAA4BV,EAAAA,EAAAA,WAAS,GAArC,eAAOW,EAAP,KAAeC,EAAf,KACA,GAA0BZ,EAAAA,EAAAA,UAAS,IAAnC,eAAOa,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACHF,IACLG,EAAAA,EAAAA,IAAMH,EACP,GAAE,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACHZ,IAELS,GAAU,GACVE,EAAS,IACTxB,EAAea,GACZV,MAAK,SAAAwB,GACCA,EAAKC,QAAQC,SAChBH,EAAAA,EAAAA,IAAM,aAERd,EAAUe,EAAKC,QAChB,IACAE,OAAM,SAAAP,IACLG,EAAAA,EAAAA,IAAM,aACNF,EAASD,EACV,IACAQ,SAAQ,WACPT,GAAU,EACX,IACJ,GAAE,CAACT,IAiBJ,OACE,4BACE,6BACE,kBAAOmB,KAAK,OAAOC,MAAOhC,EAAOiC,SAlBb,SAAAC,GACxB,GAAyB,KAArBA,EAAIC,OAAOH,MACb,OAAOd,EAAgB,CAAC,GAE1BA,EAAgB,CAAElB,MAAOkC,EAAIC,OAAOH,OACrC,KAcK,mBAAQD,KAAK,SAASK,QAZP,SAAAF,GACnB,IAAKlC,EACH,OAAOyB,EAAAA,EAAAA,IAAM,wBAEfS,EAAIG,iBACJxB,EAAcb,EACf,EAMK,8BAIF,2BACGoB,IAAU,SAACkB,EAAA,EAAD,KACX,wBACG5B,EAAO6B,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAEEC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAM9B,GAHjB,SAKG0B,EAAMK,OAJFL,EAAME,KAFNF,EAAME,GAUlB,UAGL,SAAC,KAAD,MAGL,C","sources":["components/Loading.js","services/getSearchMovie.js","pages/Movies.js"],"sourcesContent":["const Loading = () => {\n  return <h2>.....Loading</h2>;\n};\nexport default Loading;\n","const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst KEY = 'f8560092a6f6e40fc22fba47f695da5a';\n\nconst getSearchMovie = async query => {\n  return await fetch(`${BASE_URL}?api_key=${KEY}&query=${query}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong'));\n    }\n  );\n};\n\nexport default getSearchMovie;\n\n// https://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n","import Loading from 'components/Loading';\nimport { useEffect, useState } from 'react';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport getSearchMovie from 'services/getSearchMovie';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [movieValue, setMovieValue] = useState('');\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!error) return;\n    toast(error);\n  }, [error]);\n\n  useEffect(() => {\n    if (!movieValue) return;\n\n    setLoader(true);\n    setError('');\n    getSearchMovie(movieValue)\n      .then(data => {\n        if (!data.results.length) {\n          toast('Not found');\n        }\n        setMovies(data.results);\n      })\n      .catch(error => {\n        toast('Not found');\n        setError(error);\n      })\n      .finally(() => {\n        setLoader(false);\n      });\n  }, [movieValue]);\n\n  const updateQueryString = evt => {\n    if (evt.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: evt.target.value });\n  };\n\n  const handleSubmit = evt => {\n    if (!query) {\n      return toast('Not found this movie');\n    }\n    evt.preventDefault();\n    setMovieValue(query);\n  };\n\n  return (\n    <div>\n      <form>\n        <input type=\"text\" value={query} onChange={updateQueryString} />\n        <button type=\"submit\" onClick={handleSubmit}>\n          Search movie\n        </button>\n      </form>\n      <div>\n        {loader && <Loading />}\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link\n                  key={movie.id}\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <Toaster />\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["getSearchMovie","query","fetch","then","response","ok","json","Promise","reject","Error","useState","movies","setMovies","movieValue","setMovieValue","location","useLocation","useSearchParams","searchParams","setSearchParams","get","loader","setLoader","error","setError","useEffect","toast","data","results","length","catch","finally","type","value","onChange","evt","target","onClick","preventDefault","Loading","map","movie","to","id","state","from","title"],"sourceRoot":""}