{"version":3,"file":"static/js/359.6b471830.chunk.js","mappings":"mJAGA,IAHgB,WACd,OAAO,wCACR,C,iGCAYA,EAAOC,EAAAA,GAAAA,GAAH,wEAKJC,EAAOD,EAAAA,GAAAA,GAAH,6D,SCkBjB,EAtBmB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,SAAAC,GACV,OACE,SAACL,EAAD,WACE,SAAC,KAAD,CAEEM,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GAHjB,SAKGG,EAAMK,OAJFL,EAAME,KAFJF,EAAME,GAUpB,KAGN,C,4JCpBKI,EAAc,mCAAG,WAAMC,GAAN,iFACRC,MAAM,GAAD,OAJH,4CAIG,oBAHR,mCAGQ,kBAAqCD,IAASE,MAC9D,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,wBACjC,IAPkB,mFAAH,sDAWpB,I,kBCZaC,EAAOtB,EAAAA,GAAAA,KAAH,0CAIJuB,EAAQvB,EAAAA,GAAAA,MAAH,mEAILwB,EAASxB,EAAAA,GAAAA,OAAH,yC,SCuDnB,EAzDe,WAAO,IAAD,EACnB,GAA4ByB,EAAAA,EAAAA,UAAS,IAArC,eAAOvB,EAAP,KAAewB,EAAf,KACA,GAA4BD,EAAAA,EAAAA,WAAS,GAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpB,EAAK,UAAGmB,EAAaE,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACHN,IACLO,EAAAA,EAAAA,IAAMP,EACP,GAAE,CAACA,KAEJM,EAAAA,EAAAA,YAAU,WACHtB,IAELe,GAAU,GACVE,EAAS,IACTlB,EAAeC,GACZE,MAAK,SAAAsB,GACCA,EAAKC,QAAQC,SAChBH,EAAAA,EAAAA,IAAM,aAERV,EAAUW,EAAKC,QAChB,IACAE,OAAM,SAAAX,IACLO,EAAAA,EAAAA,IAAM,aACNN,EAASD,EACV,IACAY,SAAQ,WACPb,GAAU,EACX,IACJ,GAAE,CAACf,IAWJ,OACE,4BACE,UAACS,EAAD,CAAMoB,SAXW,SAAAC,GACnBA,EAAIC,iBACJ,IAAM/B,EAAQ8B,EAAIE,OAAOhC,MAAMiC,MAAMC,OAAOC,cAC5C,IAAKnC,EACH,OAAOuB,EAAAA,EAAAA,IAAM,8BAEfH,EAAgB,CAAEpB,MAAAA,GACnB,EAIG,WACE,SAACU,EAAD,CAAO0B,KAAK,OAAOC,aAAcrC,EAAOsC,KAAK,WAC7C,SAAC3B,EAAD,CAAQyB,KAAK,SAAb,8BAEF,2BACG/C,IAAU,SAACkD,EAAA,EAAD,CAAYlD,OAAQA,IAC9ByB,IAAU,SAAC0B,EAAA,EAAD,QAEb,SAAC,KAAD,MAGL,C","sources":["components/Loading.js","components/MovieList/MovieList.styled.js","components/MovieList/MoviesList.js","services/getSearchMovie.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["const Loading = () => {\n  return <h2>.....Loading</h2>;\n};\nexport default Loading;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  border: 1px solid grey;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  padding: 5px;\n  font-size: 22px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Item, List } from './MovieList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => {\n        return (\n          <Item key={movie.id}>\n            <Link\n              key={movie.id}\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              {movie.title}\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst KEY = 'f8560092a6f6e40fc22fba47f695da5a';\n\nconst getSearchMovie = async query => {\n  return await fetch(`${BASE_URL}?api_key=${KEY}&query=${query}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong'));\n    }\n  );\n};\n\nexport default getSearchMovie;\n\n// https://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 20px;\n`;\n\nexport const Input = styled.input`\n  font-size: 22px;\n  margin-right: 10px;\n`;\nexport const Search = styled.button`\n  padding: 7px;\n`;\n","import Loading from 'components/Loading';\nimport MoviesList from 'components/MovieList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { useSearchParams } from 'react-router-dom';\nimport getSearchMovie from 'services/getSearchMovie';\nimport { Form, Input, Search } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!error) return;\n    toast(error);\n  }, [error]);\n\n  useEffect(() => {\n    if (!query) return;\n\n    setLoader(true);\n    setError('');\n    getSearchMovie(query)\n      .then(data => {\n        if (!data.results.length) {\n          toast('Not found');\n        }\n        setMovies(data.results);\n      })\n      .catch(error => {\n        toast('Not found');\n        setError(error);\n      })\n      .finally(() => {\n        setLoader(false);\n      });\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const query = evt.target.query.value.trim().toLowerCase();\n    if (!query) {\n      return toast('Please write name of movie');\n    }\n    setSearchParams({ query });\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" defaultValue={query} name=\"query\" />\n        <Search type=\"submit\">Search movie</Search>\n      </Form>\n      <div>\n        {movies && <MoviesList movies={movies} />}\n        {loader && <Loading />}\n      </div>\n      <Toaster />\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["List","styled","Item","movies","location","useLocation","map","movie","to","id","state","from","title","getSearchMovie","query","fetch","then","response","ok","json","Promise","reject","Error","Form","Input","Search","useState","setMovies","loader","setLoader","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","toast","data","results","length","catch","finally","onSubmit","evt","preventDefault","target","value","trim","toLowerCase","type","defaultValue","name","MoviesList","Loading"],"sourceRoot":""}