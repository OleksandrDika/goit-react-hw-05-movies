{"version":3,"file":"static/js/967.200c7466.chunk.js","mappings":"mJAGA,IAHgB,WACd,OAAO,wCACR,C,6ICCKA,EAAS,mCAAG,8FACHC,MAAM,GAAD,OAJH,6CAIG,oBAHR,mCAGQ,2BAAqDC,MACrE,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,wBACjC,IAPa,mFAAH,qDAWf,I,SCuCA,EA9Ca,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACHF,IACLG,EAAAA,EAAAA,IAAMH,EACP,GAAE,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACRH,GAAU,GACVE,EAAS,IACTf,IACGE,MAAK,SAAAgB,GACwB,IAAxBA,EAAKC,QAAQC,OAIjBT,EAAUO,EAAKC,SAHbE,MAAM,wCAIT,IACAC,OAAM,SAAAR,GACLC,EAASD,EACV,IACAS,SAAQ,WACPV,GAAU,EACX,GACJ,GAAE,KAGD,4BACE,eAAIW,MAAO,CAAEC,UAAW,QAAxB,SACGf,EAAOgB,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAqBC,GAAE,kBAAaD,EAAME,IAA1C,SACGF,EAAMG,OADEH,EAAME,KADVF,EAAME,GAMlB,MAEFjB,IAAU,SAACmB,EAAA,EAAD,MAGhB,C","sources":["components/Loading.js","services/getPopularMovies.js","pages/Home.js"],"sourcesContent":["const Loading = () => {\n  return <h2>.....Loading</h2>;\n};\nexport default Loading;\n","const BASE_URL = 'https://api.themoviedb.org/3/movie/popular';\nconst KEY = 'f8560092a6f6e40fc22fba47f695da5a';\n\nconst getMovies = async () => {\n  return await fetch(`${BASE_URL}?api_key=${KEY}&language=en-US&page=1`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong'));\n    }\n  );\n};\n\nexport default getMovies;\n\n// https://api.themoviedb.org/3/movie/popular?api_key=<<api_key>>&language=en-US&page=1\n","// import { useEffect } from 'react';\nimport Loading from 'components/Loading';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Link } from 'react-router-dom';\nimport getMovies from 'services/getPopularMovies';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!error) return;\n    toast(error);\n  }, [error]);\n\n  useEffect(() => {\n    setLoader(true);\n    setError('');\n    getMovies()\n      .then(data => {\n        if (data.results.length === 0) {\n          alert('There are no images for your request.');\n          return;\n        }\n        setMovies(data.results);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => {\n        setLoader(false);\n      });\n  }, []);\n\n  return (\n    <div>\n      <ul style={{ listStyle: 'none' }}>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link key={movie.id} to={`/movies/${movie.id}`}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      {loader && <Loading />}\n    </div>\n  );\n};\nexport default Home;\n"],"names":["getMovies","fetch","then","response","ok","json","Promise","reject","Error","useState","movies","setMovies","loader","setLoader","error","setError","useEffect","toast","data","results","length","alert","catch","finally","style","listStyle","map","movie","to","id","title","Loading"],"sourceRoot":""}