{"version":3,"file":"static/js/847.e397b4e8.chunk.js","mappings":"mJAGA,IAHgB,WACd,OAAO,wCACR,C,uGCmFD,UA/EqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAkBC,EAAAA,EAAAA,QAAM,oBAACV,EAASW,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KA4BvD,OA1BAC,EAAAA,EAAAA,YAAU,WACHN,IACLO,EAAAA,EAAAA,IAAMP,EACP,GAAE,CAACA,KAEJM,EAAAA,EAAAA,YAAU,WACRP,GAAU,GACVE,EAAS,KACTO,EAAAA,EAAAA,GAAYjB,GACTkB,MAAK,SAAAC,GACJb,EAAYa,EACb,IACAC,OAAM,SAAAX,GACLC,EAASD,EACV,IACAY,SAAQ,WACPb,GAAU,EACX,GACJ,GAAE,CAACR,KASF,2BACGO,IAAU,SAAC,IAAD,KACX,SAAC,KAAD,CAAMe,GAAIX,EAAgBY,QAA1B,sBACA,iBAAKC,MAAO,CAAEC,QAAS,QAAvB,WACE,gBACEC,IAAG,8CAAyCrB,EAASsB,aACrDC,IAAI,GACJJ,MAAO,CAAEK,MAAO,QAElB,gBAAIL,MAAO,CAAEM,UAAW,QAAxB,WACE,yBACE,wBAAKzB,EAAS0B,WAEhB,yBACE,uCAAe1B,EAAS2B,mBAE1B,yBACE,wCAEF,yBACE,uBAAI3B,EAAS4B,cAEf,yBACE,4CAKN,mDACA,gBAAIT,MAAO,CAAEM,UAAW,QAAxB,WACE,yBACE,SAAC,KAAD,CAAMR,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAY,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,qDChFKlB,EAAW,mCAAG,WAAMmB,GAAN,iFACLC,MAAM,GAAD,OAJH,uCAIG,OACFD,EADE,oBAHR,mCAGQ,+CAEhBlB,MAAK,SAAAoB,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,wBACjC,IARiB,mFAAH,sDAWjB,K","sources":["components/Loading.js","pages/MovieDetails.js","services/getOneMovie.js"],"sourcesContent":["const Loading = () => {\n  return <h2>.....Loading</h2>;\n};\nexport default Loading;\n","import Loading from 'components/Loading';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport getOneMovie from 'services/getOneMovie';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movieDet, setMovieDet] = useState({});\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState('');\n  const backLocationref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!error) return;\n    toast(error);\n  }, [error]);\n\n  useEffect(() => {\n    setLoader(true);\n    setError('');\n    getOneMovie(movieId)\n      .then(data => {\n        setMovieDet(data);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => {\n        setLoader(false);\n      });\n  }, [movieId]);\n\n  // useEffect(() => {\n  //   getOneMovie(movieId).then(data => {\n  //     setMovieDet(data);\n  //   });\n  // }, [movieId]);\n  // const goBackPath = location.state?.from ?? { pathname: '/' };\n  return (\n    <div>\n      {loader && <Loading />}\n      <Link to={backLocationref.current}>Go back</Link>\n      <div style={{ display: 'flex' }}>\n        <img\n          src={`https://image.tmdb.org/t/p/original/${movieDet.poster_path}`}\n          alt=\"\"\n          style={{ width: 300 }}\n        />\n        <ul style={{ listStyle: 'none' }}>\n          <li>\n            <h2>{movieDet.title}</h2>\n          </li>\n          <li>\n            <p>User Score {movieDet.vote_average}</p>\n          </li>\n          <li>\n            <h3>Overwiev</h3>\n          </li>\n          <li>\n            <p>{movieDet.overview}</p>\n          </li>\n          <li>\n            <h4>Genres</h4>\n          </li>\n          {/* <li>{movieDet.genres.map(item => item.name)}</li> */}\n        </ul>\n      </div>\n      <p>Additional information</p>\n      <ul style={{ listStyle: 'none' }}>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst KEY = 'f8560092a6f6e40fc22fba47f695da5a';\n\nconst getOneMovie = async query => {\n  return await fetch(\n    `${BASE_URL}${query}?api_key=${KEY}&language=en-US&append_to_response=credits`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Something went wrong'));\n  });\n};\n\nexport default getOneMovie;\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n"],"names":["movieId","useParams","location","useLocation","useState","movieDet","setMovieDet","loader","setLoader","error","setError","backLocationref","useRef","state","from","useEffect","toast","getOneMovie","then","data","catch","finally","to","current","style","display","src","poster_path","alt","width","listStyle","title","vote_average","overview","Suspense","fallback","query","fetch","response","ok","json","Promise","reject","Error"],"sourceRoot":""}